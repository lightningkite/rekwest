buildscript {
    ext.kotlinVersion = '1.3.10'
    ext.ktorVersion = '1.0.0'

    repositories {
        jcenter()
        maven { url "http://dl.bintray.com/kotlin/kotlin-eap" }
        maven { url "http://dl.bintray.com/kotlin/kotlin-dev" }
        maven { url "https://kotlin.bintray.com/kotlinx" }
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "com.lightningkite:mirror-plugin:0.0.2"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.+'
    }
}

group 'com.lightningkite'
version '0.0.2'

apply plugin: 'kotlin-platform-jvm'
apply plugin: 'com.lightningkite.mirror'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact tasks.sourceJar
            groupId project.group.toString()
            artifactId project.name
            version project.version
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publish = true
    pkg {
        repo = project.group.toString()
        name = project.name
        userOrg = "lightningkite"
        licenses = ["MIT"]
        def github = "https://github.com/lightningkite/rekwest"
        vcsUrl = github
        websiteUrl = github
        issueTrackerUrl = github + "/issues"
        version {
            name = project.version
            released = new Date()
        }
    }
}


repositories {
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    testCompile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    compile project(':rekwest-client')
    api 'com.lightningkite:kommon-jvm:0.0.2'
    api 'com.lightningkite:mirror-runtime-jvm:0.0.2'
    api 'com.lightningkite:mirror-archive-api-jvm:0.0.2'

    testApi 'com.lightningkite:lokalize-jvm:0.0.2'
    testApi 'com.lightningkite:kommon-jvm:0.0.2'

    testApi 'junit:junit:4.12'
    testImplementation("io.ktor:ktor-server-test-host:${ktorVersion}")

    compile "io.ktor:ktor-server-core:${ktorVersion}"
    compile "io.ktor:ktor-auth:${ktorVersion}"
    compile "io.ktor:ktor-websockets:${ktorVersion}"
    compile "me.gosimple:nbvcxz:1.4.2"
    testCompile "io.ktor:ktor-server-netty:${ktorVersion}"
    testCompile "io.ktor:ktor-server-cio:${ktorVersion}"
    testCompile "io.ktor:ktor-auth-jwt:${ktorVersion}"

    compile 'de.mkammerer:argon2-jvm:2.5'

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
