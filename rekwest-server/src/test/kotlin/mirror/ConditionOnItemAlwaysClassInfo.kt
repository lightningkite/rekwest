//Generated by Lightning Kite's Mirror plugin
//AUTOMATICALLY GENERATED AND WILL BE OVERRIDDEN IF THIS MESSAGE IS PRESENT
package com.lightningkite.mirror.archive

import com.lightningkite.mirror.info.*
import kotlin.reflect.KClass

@Suppress("RemoveExplicitTypeArguments", "UNCHECKED_CAST", "USELESS_CAST")
object ConditionOnItemAlwaysClassInfo: ClassInfo<ConditionOnItem.Always<*>> {

   override val kClass: KClass<ConditionOnItem.Always<*>> = ConditionOnItem.Always::class
   override val modifiers: List<ClassInfo.Modifier> = listOf()

   override val implements: List<Type<*>> = listOf()

   override val packageName: String = "com.lightningkite.mirror.archive"
   override val owner: KClass<*>? = ConditionOnItem::class
   override val ownerName: String? = "ConditionOnItem"

   override val name: String = "Always"
   override val annotations: List<AnnotationInfo> = listOf()
   override val enumValues: List<ConditionOnItem.Always<*>>? = null

   

   override val fields:List<FieldInfo<ConditionOnItem.Always<*>, *>> = listOf()

   override fun construct(map: Map<String, Any?>): ConditionOnItem.Always<kotlin.Any> {
       //Gather variables
       
           //Handle the optionals
       
       //Finally do the call
       return ConditionOnItem.Always<kotlin.Any>(
           
       )
   }

}