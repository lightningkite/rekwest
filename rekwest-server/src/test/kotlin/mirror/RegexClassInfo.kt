//Generated by Lightning Kite's Mirror plugin
//AUTOMATICALLY GENERATED AND WILL BE OVERRIDDEN IF THIS MESSAGE IS PRESENT
package mirror.kotlin.text

import com.lightningkite.mirror.info.*
import kotlin.reflect.KClass

@Suppress("RemoveExplicitTypeArguments", "UNCHECKED_CAST", "USELESS_CAST")
object RegexClassInfo: ClassInfo<Regex> {

   override val kClass: KClass<Regex> = Regex::class
   override val modifiers: List<ClassInfo.Modifier> = listOf()

   override val implements: List<Type<*>> = listOf()

   override val packageName: String = "kotlin.text"
   override val owner: KClass<*>? = null
   override val ownerName: String? = null

   override val name: String = "Regex"
   override val annotations: List<AnnotationInfo> = listOf()
   override val enumValues: List<Regex>? = null

   val fieldPattern = FieldInfo<Regex, kotlin.String>(this, "pattern", Type<kotlin.String>(kotlin.String::class, listOf(), false), false, { it.pattern as kotlin.String}, listOf())

   override val fields:List<FieldInfo<Regex, *>> = listOf(fieldPattern)

   override fun construct(map: Map<String, Any?>): Regex {
       //Gather variables
       val pattern:kotlin.String = map["pattern"] as kotlin.String
           //Handle the optionals
       
       //Finally do the call
       return Regex(
           pattern = pattern
       )
   }

}